/*
Группировка анаграмм
Учитывая массив строк strs, сгруппируйте анаграммы вместе. Вы можете вернуть ответ в любом порядке.

Анаграмма - это слово или фраза, образованная путем перестановки букв другого слова или фразы, обычно с использованием всех исходных букв ровно один раз.

 

Пример 1:

**Ввод:** strs = ["eat","tea","tan","ate","nat","bat"]
**Вывод:** [["bat"],["nat","tan"],["ate","eat","tea"]]

Пример 2:

**Ввод:** strs = [""]
**Вывод:** [[""]]

Пример 3:

**Ввод:** strs = ["a"]
**Вывод:** [["a"]]

 

Ограничения:

1 <= strs.length <= 104
0 <= strs[i].length <= 100
strs[i] состоит из строчных английских букв.
Алгоритм 1
Для решения данной задачи, мы можем воспользоваться хэш-таблицей, где ключом будет отсортированное слово, а значением - массив всех анаграмм этого слова.

Алгоритм решения будет следующим:

Инициализировать пустую хэш-таблицу.
Проходить по каждому слову в массиве strs.
Отсортировать текущее слово в алфавитном порядке.
Если отсортированное слово уже есть в хэш-таблице, добавить текущее слово в значение этого ключа.
Если отсортированного слова нет в хэш-таблице, создать новую пару ключ-значение, где ключ - отсортированное слово, а значение - массив, содержащий только текущее слово.
В конце прохода по всем словам, вернуть все значения в хэш-таблице как результат.
Таким образом, все анаграммы будут сгруппированы и возвращены в виде массива массивов.

Пример решения:

 1. Инициализация хэш-таблицы: {}
 
 2. Первое слово "eat":
    Отсортированное слово: "aet"
    Хэш-таблица после первого слова: {"aet": ["eat"]}
    
 3. Второе слово "tea":
    Отсортированное слово: "aet"
    Хэш-таблица после второго слова: {"aet": ["eat", "tea"]}
    
 4. Третье слово "tan":
    Отсортированное слово: "ant"
    Хэш-таблица после третьего слова: {"aet": ["eat", "tea"], "ant": ["tan"]}
    
 5. Четвертое слово "ate":
    Отсортированное слово: "aet"
    Хэш-таблица после четвертого слова: {"aet": ["eat", "tea", "ate"], "ant": ["tan"]}
    
 6. Пятое слово "nat":
    Отсортированное слово: "ant"
    Хэш-таблица после пятого слова: {"aet": ["eat", "tea", "ate"], "ant": ["tan", "nat"]}
    
 7. Шестое слово "bat":
    Отсортированное слово: "abt"
    Хэш-таблица после шестого слова: {"aet": ["eat", "tea", "ate"], "ant": ["tan", "nat"], "abt": ["bat"]}
    
 8. Возвращаем все значения хэш-таблицы: [["eat", "tea", "ate"], ["tan", "nat"], ["bat"]]

*/
const groupAnagrams = (strs) => {
  const map = new Map();
  for (let str of strs) {
    const sortedStr = str.split("").sort().join("");
    if (map.has(sortedStr)) {
      map.get(sortedStr).push(str);
    } else {
      map.set(sortedStr, [str]);
    }
  }
  const groups = [];
  for (let group of map.values()) {
    groups.push(group);
  }
  return groups;
};
