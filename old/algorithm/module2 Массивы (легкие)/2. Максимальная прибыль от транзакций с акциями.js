/* 

У вас есть массив prices, где prices[i] - это цена данной акции в i-й день.

Вы хотите максимизировать свою прибыль, выбирая один день для покупки одной акции и выбирая другой день в будущем для ее продажи.

Верните максимальную прибыль, которую вы можете получить от этой транзакции. Если вы не можете получить никакую прибыль, вернитесь 0.

Пример 1:

**Ввод:** prices = [7,1,5,3,6,4]
**Вывод:** 5
**Пояснение:** Купите во второй день (цена = 1) и продайте в пятый день (цена = 6), прибыль = 6-1 = 5.
Обратите внимание, что покупка во второй день и продажа в первый день не разрешается, потому что вы должны купить до продажи.
Пример 2:

**Ввод:** prices = [7,6,4,3,1]
**Вывод:** 0
**Пояснение:** В этом случае не совершается никаких транзакций, и максимальная прибыль = 0.
Ограничения:

1 <= prices.length <= 105
0 <= prices[i] <= 104 


Алгоритм 1
Данная задача связана с нахождением максимальной прибыли от 
покупки и продажи акций.

Основная идея решения заключается в том, чтобы находить 
минимальную цену акции для покупки и максимальную цену акции для продажи.

Мы будем проходить по массиву цен акций и обновлять 
минимальную цену акции, если текущая цена меньше минимальной. 
Далее мы будем вычислять прибыль, которую можно 
получить на текущем дне, путем вычитания минимальной цены акции из 
текущей цены акции. Если данная прибыль больше максимальной прибыли, 
мы обновляем максимальную прибыль.

В конце прохода по массиву, мы получим максимальную прибыль, 
которую можно получить от этой транзакции. Если все цены акций в массиве убывают, то максимальная прибыль будет равна 0.

Таким образом, можно реализовать данное решение, проходя 
по массиву цен акций один раз и обновляя минимальную цену и 
максимальную прибыль на каждом шаге.

Сложность данного алгоритма составляет O(n), где n - количество цен акций.
*/

function maxProfit(prices) {
  let maxProfit = 0;
  let minPrice = prices[0];

  for (let i = 1; i < prices.length; i++) {
    if (prices[i] < minPrice) {
      minPrice = prices[i];
    } else {
      let profit = prices[i] - minPrice;
      if (profit > maxProfit) {
        maxProfit = profit;
      }
    }
  }

  return maxProfit;
}
