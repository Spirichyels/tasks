Что возвращает функция async/await?
Функция async/await возвращает промис, который разрешается, когда асинхронная операция завершится.

Когда функция async вызывается, она возвращает объект Promise , который представляет асинхронную операцию. Внутри функции async можно использовать ключевое слово await , которое приостанавливает выполнение функции до тех пор, пока промис не будет разрешен или отклонен.

Когда промис разрешен, await возвращает его значение, и выполнение функции продолжается. Если промис отклонен, await выбрасывает исключение, которое можно обработать с помощью конструкции try/catch .

Пример использования async/await :

async function fetchData() {
  const response = await fetch('https://api.example.com/data');
  const data = await response.json();
  return data;
}

fetchData().then(data => {
  console.log(data);
}).catch(error => {
  console.error(error);
});

В этом примере функция fetchData использует async/await для получения данных с сервера с помощью функции fetch . Когда данные будут получены, функция fetchData вернет промис, который разрешается с данными в формате JSON. Затем мы используем методы then и catch для обработки результата. Если при получении данных произойдет ошибка, 
мы используем метод catch для обработки ошибки.